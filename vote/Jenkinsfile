pipeline {
    agent none
    stages {
        stage('build'){
            agent {
                docker {
                    image 'python:2.7.16-slim'
                    args '--user root'
                }
            }
            when{
                changeset '**/vote/**'
            }
            steps{
                echo 'Build...'
                dir('vote') {
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('test'){
            agent {
                docker {
                    image 'python:2.7.16-slim'
                    args '--user root'
                }
            }
            when{
                changeset '**/vote/**'
            }
            steps{
                echo 'Running unit tests'
                dir('vote') {
                    sh 'pip install -r requirements.txt'
                    sh 'nosetests -v'
                }
            }
        }
        stage('docker-package') {
            agent any
            when{
                changeset '**/vote/**'
            }
            steps {
                echo 'Packaging app with docker'
                script {
                    docker.withRegistry('https://index.docker.io/v1/','docker-login') {
                        def workerImage = docker.build("mmarquezvacas/vote:v${env.BUILD_ID}","./vote")
                        workerImage.push()
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'END'
        }
    }
}